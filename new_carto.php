<?php
$month = $_GET['m'];
$vehicle = $_GET['v'];
$priority = $_GET['p'];
$center = $_GET['c'];
$transferCost = $_GET['tc'];
$modeList = $_GET['ml'];
$excludeList = $_GET['el'];
// display errors or not...

$link = pg_connect("host=orbis-prod.stanford.edu dbname=orbis user=webapp password=sl1ppy");

$priorityQuery = "(o_speed_new(''".$vehicle."'',type,the_geom,cost) + o_alt_adjust(''".$vehicle."'',restricted))";
$priorityQuery4 = "(o_speed_new(''".$vehicle."'',type,o_routing.the_geom,".$transferCost."))";

if($priority == 1) {
$priorityQuery = "(o_expense(''".$vehicle."'',type,the_geom,cost))";
$priorityQuery4 = "(o_expense(''".$vehicle."'',type,o_routing.the_geom,".$transferCost."))";
}

else if($priority == 2) {
$priorityQuery = "((st_length(Geography(ST_Transform(the_geom,4326)))) / 1000)";    
$priorityQuery4 = "0";
}

$sql = "
WITH o AS (
SELECT

''||vertex_id_target||','||cost::numeric(9,3)||'
' as content

FROM

KDijkstra_dist_sp
     ('
SELECT DISTINCT ON (source,target)
gid as id,
source::integer,
target::integer,
(CASE
when type = ''transfercoastal'' then ".$priorityQuery4."
when type = ''transferferry'' then ".$priorityQuery4."
when type = ''transferoverseas'' then ".$priorityQuery4."
when type = ''transferriver'' then ".$priorityQuery4."
else ".$priorityQuery."
END) as cost
FROM
o_routing WHERE month IN(0,".$month.")
AND 
(''".$modeList."'' LIKE (''%''||type||''%''))
AND (restricted NOT LIKE ''%''||type||''%'' OR restricted IS NULL)
AND (
target NOT IN (".$excludeList.")
OR
source = target
)
ORDER BY
source,
target,
".$priorityQuery."
',".$center.", '{
50247,
50445,
50719,
50428,
50534,
50253,
50592,
50594,
50742,
50289,
50112,
50608,
50225,
50395,
50309,
50419,
50187,
50035,
50262,
50209,
50052,
50505,
50619,
50351,
50023,
50096,
50053,
50125,
50264,
50007,
50229,
50405,
50104,
50611,
50648,
50296,
50126,
50647,
50627,
50364,
50725,
50321,
50348,
50767,
50761,
50394,
50220,
50249,
50113,
50337,
50064,
50530,
50160,
50055,
50068,
50183,
50470,
50620,
50335,
50048,
50015,
50609,
50554,
50203,
50441,
50749,
50449,
50501,
50182,
50316,
50646,
50552,
50025,
50165,
50757,
50002,
50189,
50721,
50643,
50396,
50586,
50157,
50639,
50145,
50340,
50442,
50090,
50310,
50674,
50432,
50094,
50513,
50473,
50617,
50233,
50430,
50765,
50255,
50718,
50603,
50277,
50651,
50301,
50161,
50274,
50556,
50524,
50766,
50036,
50080,
50515,
50059,
50760,
50050,
50193,
50551,
50110,
50338,
50499,
50374,
50245,
50636,
50287,
50360,
50682,
50325,
50353,
50375,
50128,
50362,
50423,
50642,
50079,
50328,
50175,
50751,
50741,
50270,
50333,
50269,
50618,
50313,
50755,
50440,
50082,
50342,
50380,
50467,
50368,
50356,
50471,
50242,
50117,
50654,
50077,
50167,
50086,
50012,
50401,
50056,
50436,
50146,
50136,
50185,
50456,
50759,
50737,
50743,
50051,
50303,
50763,
50451,
50133,
50060,
50101,
50762,
50001,
50454,
50402,
50452,
50414,
50365,
50324,
50222,
50602,
50243,
50120,
50700,
50426,
50408,
50450,
50516,
50124,
50299,
50058,
50546,
50171,
50099,
50235,
50032,
50098,
50169,
50034,
50491,
50295,
50158,
50527,
50427,
50045,
50314,
50312,
50562,
50089,
50119,
50003,
50455,
50739,
50016,
50206,
50392,
50188,
50418,
50226,
50013,
50582,
50210,
50168,
50421,
50252,
50717,
50251,
50329,
50507,
50341,
50129,
50297,
50332,
50610,
50521,
50588,
50768,
50487,
50559,
50747,
50137,
50108,
50047,
50140,
50769,
50326,
50286,
50196,
50198,
50085,
50476,
50258,
50109,
50355,
50254,
50049,
50043,
50139,
50745,
50202,
50218,
50733,
50141,
50557,
50634,
50774,
50465,
50367,
50378,
50057,
50062,
50358,
50087,
50166,
50174,
50093,
50391,
50061,
50172,
50453,
50227,
50118,
50311,
50306,
50014,
50495,
50173,
50415,
50149,
50213,
50540,
50746,
50095,
50257,
50485,
50190,
50443,
50424,
50291,
50336,
50438,
50577,
50407,
50661,
50100,
50143,
50720,
50019,
50736,
50420,
50063,
50005,
50381,
50529,
50628,
50352,
50489,
50244,
50771,
50439,
50621,
50411,
50285,
50400,
50413,
50458,
50713,
50261,
50151,
50179,
50123,
50150,
50404,
50403,
50122,
50369,
50102,
50641,
50553,
50541,
50677,
50228,
50022,
50343,
50081,
50176,
50214,
50219,
50317,
50155,
50237,
50773,
50031,
50156,
50398,
50631,
50460,
50483,
50132,
50567,
50278,
50073,
50111,
50434,
50735,
50246,
50459,
50528,
50357,
50212,
50548,
50282,
50181,
50221,
50593,
50748,
50347,
50163,
50406,
50361,
50041,
50231,
50422,
50280,
50731,
50376,
50281,
50078,
50349,
50650,
50758,
50437,
50178,
50750,
50604,
50008,
50091,
50208,
50393,
50275,
50279,
50148,
50518,
50076,
50265,
50184,
50772,
50319,
50017,
50474,
50292,
50088,
50290,
50542,
50263,
50652,
50260,
50239,
50266,
50153,
50345,
50512,
50135,
50533,
50207,
50011,
50186,
50230,
50359,
50276,
50069,
50271,
50046,
50105,
50464,
50010,
50272,
50756,
50389,
50164,
50726,
50599,
50037,
50416,
50223,
50029,
50550,
50523,
50072,
50066,
50115,
50106,
50144,
50024,
50097,
50116,
50382,
50410,
50154,
50200,
50482,
50194,
50492,
50630,
50147,
50469,
50446,
50298,
50065,
50486,
50727,
50259,
50205,
50318,
50217,
50152,
50626,
50649,
50067,
50678,
50738,
50191,
50159,
50447,
50092,
50537,
50177,
50370,
50131,
50327,
50138,
50308,
50250,
50472,
50544,
50234,
50334,
50614,
50256,
50498,
50322,
50637,
50754,
50307,
50211,
50770,
50006,
50373,
50425,
50549,
50538,
50644,
50350,
50268,
50399,
50039,
50462,
50764,
50083,
50545,
50623,
50716,
50366,
50409,
50383,
50300,
50130,
50027,
50390,
50463,
50386,
50267,
50431,
50192,
50448,
50509,
50412,
50232,
50009,
50520,
50435,
50613,
50753,
50502,
50224,
50632,
50238,
50114,
50385,
50121,
50598,
50429,
50070,
50040,
50606,
50201,
50021,
50371,
50658,
50304,
50236,
50216,
50284,
50493,
50273,
50752,
50388,
50590,
50075,
50625,
50028,
50197,
50134,
50744,
50372,
50504,
50346,
50162,
50305,
50568,
50288,
50344,
50531,
50283,
50042,
50564,
50730,
50170,
50054,
50103,
50417,
50444,
50240,
50539,
50468,
50315,
50033,
50569,
50714,
50180,
50142,
50732,
50074,
50004,
50660,
50354,
50248,
50690,
50204,
50379,
50466,
50020,
50715,
50241,
50624,
50547,
50597,
50387,
50558,
50302,
50573,
50555,
50127,
50199,
50084,
50339,
50323,
50107,
50026,
50377,
50622,
50612,
50331,
50363,
50215,
50038,
50294,
50195,
50535,
50293,
50330,
50320,
50384,
50461,
50030
}',true,false)
)
SELECT
'\"target\",\"cost\"
'||string_agg(content,'')||''
FROM
o
";

if (!$link) {
    echo "error, didn't make the pg_connect()";
} else {
	$result = pg_query($link, $sql);
	if (!$result) {
	  echo "error, no result!<br>";
      print pg_last_error($link);	  
	  exit;
	}
}

	while ($row = pg_fetch_row($result)) {
	  	echo($row[0]);

	}

pg_close($link);
?>